name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Lint (se disponÃ­vel)
        run: |
          if [ -f .eslintrc.js ] || [ -f .eslintrc.json ] || [ -f .eslintrc ]; then
            npx eslint .
          else
            echo 'No ESLint config found, skipping lint.'
          fi
      - name: Run build (checa sintaxe dos arquivos principais)
        run: |
          node --check index.js
          node --check src/main.js
          node --check src/services/llmService.js
          node --check src/services/newsService.js
          node --check src/utils/persistence.js
          node --check src/utils/logger.js
          node --check src/providers/llmProviderFactory.js
          node --check src/providers/openaiProvider.js
          node --check src/providers/geminiProvider.js
          node --check src/providers/ollamaProvider.js
      - name: Run tests (Jest + coverage)
        run: npm test -- --coverage
      - name: Get coverage percent and badge color
        id: coverage
        run: |
          if [ -f ./coverage/coverage-summary.json ]; then
            COVERAGE=$(node -e "console.log(Math.round(require('./coverage/coverage-summary.json').total.lines.pct || 0))")
          else
            COVERAGE=0
          fi
          if [ "$COVERAGE" -ge 80 ]; then
            BADGE_COLOR=brightgreen
          elif [ "$COVERAGE" -ge 50 ]; then
            BADGE_COLOR=yellow
          else
            BADGE_COLOR=red
          fi
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
          echo "BADGE_COLOR=$BADGE_COLOR" >> $GITHUB_ENV
      - name: Update README coverage badge
        run: |
          sed -i '/coverage-.*%25-.*\.svg)/Id' README.md
          sed -i "2i ![Coverage](https://img.shields.io/badge/coverage-${COVERAGE}%25-${BADGE_COLOR}.svg)" README.md
          head -10 README.md
        env:
          COVERAGE: ${{ env.COVERAGE }}
          BADGE_COLOR: ${{ env.BADGE_COLOR }}
      - name: Commit badge if changed
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git diff --cached --quiet || git commit -m "ci: update coverage badge"
          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git HEAD:main
